"use strict";(self.webpackChunksnxdocs=self.webpackChunksnxdocs||[]).push([[930],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>b});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=a.createContext({}),p=function(e){var r=a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},s=function(e){var r=p(e.components);return a.createElement(i.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},y=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(t),y=n,b=u["".concat(i,".").concat(y)]||u[y]||d[y]||o;return t?a.createElement(b,l(l({ref:r},s),{},{components:t})):a.createElement(b,l({ref:r},s))}));function b(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,l=new Array(o);l[0]=y;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c[u]="string"==typeof e?e:n,l[1]=c;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},9982:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var a=t(7462),n=(t(7294),t(3905));const o={sidebar_position:5},l="Player jobs",c={unversionedId:"wc-core/playerdata/jobs",id:"wc-core/playerdata/jobs",title:"Player jobs",description:"Get player jobs (server)",source:"@site/docs/wc-core/playerdata/jobs.md",sourceDirName:"wc-core/playerdata",slug:"/wc-core/playerdata/jobs",permalink:"/docs/wc-core/playerdata/jobs",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Update Playerdata",permalink:"/docs/wc-core/playerdata/updateplayerdata"},next:{title:"WestCoast Lib",permalink:"/docs/category/westcoast-lib"}},i={},p=[{value:"Get player jobs (server)",id:"get-player-jobs-server",level:3},{value:"Get player current job (on duty) (client/server)",id:"get-player-current-job-on-duty-clientserver",level:3}],s={toc:p},u="wrapper";function d(e){let{components:r,...t}=e;return(0,n.kt)(u,(0,a.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"player-jobs"},"Player jobs"),(0,n.kt)("h3",{id:"get-player-jobs-server"},"Get player jobs (server)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"player.char_jobs\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"return: ",(0,n.kt)("inlineCode",{parentName:"li"},"table"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"job name ",(0,n.kt)("inlineCode",{parentName:"li"},"key")),(0,n.kt)("li",{parentName:"ul"},"job grade ",(0,n.kt)("inlineCode",{parentName:"li"},"value"))))),(0,n.kt)("p",null,"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"local player = exports['wc_core']:getPlayer(source)\nfor job, grade in pairs(player.char_jobs) do\n    print(job, grade)\nend\n")),(0,n.kt)("h3",{id:"get-player-current-job-on-duty-clientserver"},"Get player current job (on duty) (client/server)"),(0,n.kt)("p",null,"Called on every on/off duty"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"AddStateBagChangeHandler('current_job', nil, function(bagName, key, value)\n    local source = GetPlayerFromStateBagName(bagName)\n\n    local currentJob = value.name\n    local currentGrade = value.grade\nend)\n")))}d.isMDXComponent=!0}}]);